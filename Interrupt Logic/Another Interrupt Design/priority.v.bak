module Priority_resolver(
       
  input [7:0] irr,            // interrupt request register // 7 6 5 4 ........
  input [7:0] imr,            // interrupt mask register
  output reg[2:0] dataToBus,       // in-service register       // Interrupt service output 7
    input inta       
);


  reg [7:0] irr_internal;
 reg [2:0] priorityisr ;
  reg [7:0] isr_internal;

 
  always @(irr,imr) 
  begin 
    irr_internal = irr & (~imr);
    isr_internal = 8'bzzzzzzzz ; 
   
  end 
  
  always @(irr_internal)
  begin 
  
      if(irr_internal[7]==1) priorityisr=3'b111;
      if(irr_internal[6]==1) priorityisr=3'b110;
     if(irr_internal[5]==1) priorityisr=3'b101;
     if(irr_internal[4]==1) priorityisr=3'b100;
     if(irr_internal[3]==1) priorityisr=3'b011;
     if(irr_internal[2]==1) priorityisr=3'b010;
     if(irr_internal[1]==1) priorityisr=3'b001;
     if(irr_internal[0]==1) priorityisr=3'b000;
    if(irr_internal[7]==0 && irr_internal[6]==0 && irr_internal[5]==0 && irr_internal[4]==0 && irr_internal[3]==0&&irr_internal[2]==0&&irr_internal[1]==0&&irr_internal[0]==0) 
    priorityisr=3'bzzz ;
          
 ///////////////////////////////////////////////////////////

 
  end // end always

always @(inta)
begin 
  dataToBus = priorityisr ;
end 

endmodule



module Priority_resolver_tb;

  reg [7:0] irr, imr;
  reg [7:0] isr;
  wire [2:0] priorityisr;

  // Instantiate the Priority_resolver module
  Priority_resolver dut (
    .irr(irr),
    .imr(imr),
    .isr(isr),
    .priorityisr(priorityisr)
  );

  // Stimulus and test cases
  initial begin
    // Test case 1: Priority on IR7
    irr = 8'b10000000;
    imr = 8'b00000000;
    isr = 8'b00000000;
    #10;
    $display("Priority ISR: %b", priorityisr);

    // Test case 2: Priority on IR3
    irr = 8'b00001000;
    imr = 8'b00000000;
    isr = 8'b00000000;
    #10;
    $display("Priority ISR: %b", priorityisr);

    // Test case 3: Priority on IR5
    irr = 8'b00100000;
    imr = 8'b11011111;
    isr = 8'b00000000;
    #10;
    $display("Priority ISR: %b", priorityisr);

    // Test case 4: Priority on IR2
    irr = 8'b00000100;
    imr = 8'b00000000;
    isr = 8'b00000000;
    #10;
    $display("Priority ISR: %b", priorityisr);

    // Test case 5: No priority, all interrupts masked
    irr = 8'b11001100;
    imr = 8'b11111111;
    isr = 8'b11111111;
    #10;
    $display("Priority ISR: %b", priorityisr);
    
    // Test case 5: No priority, all interrupts masked
    irr = 8'b11111111;
    imr = 8'b00000000;
    isr = 8'b11111111;
    #10;
    $display("Priority ISR: %b", priorityisr);

 // Test case 5: No priority, all interrupts masked
    irr = 8'b11010010;
    imr = 8'b00000000;
    isr = 8'b11111111;
    #10;
    $display("Priority ISR: %b", priorityisr);
  end
endmodule

    


